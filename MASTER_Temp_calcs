/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var Thiessens = ee.FeatureCollection("users/jordanffieldsgr/ArcticCarbon/Good_Thiessens_3");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//// TOGGLES FOR BATCH EXPORTS /////
/// use this if you are exceeding the memory limit of GEE, otherwise ignore//
var tFirst = 0; // change this for exports
var tEnd = tFirst + 55; 

// BIG LOOP
// use for batch exports -- that is, if you are exceeding GEE memory exports when trying to export all 
for(var i = 0; i < 50; i++) {
  var tFirst = (i * 55)
  var tEnd = (tFirst + 55);

//load study sites
var thiessen_polys = Thiessens;

// BATCH EXPORT LINES
// select only some thiessen polygons -- only for use with batch exports
  // uncomment these lines if you are batch exporting:
var tlist_ALL = thiessen_polys.aggregate_array('point_ID'); 
var tlist_select = tlist_ALL.slice(tFirst,tEnd); 
//print(tlist_select);
var thiessen_polys = thiessen_polys.filter(ee.Filter.inList('point_ID', tlist_select)); 
//print(thiessen_polys); 



// LOAD ERA5 HISTORICAL CLIMATE DATA                                        
var daily_climate = ee.ImageCollection("ECMWF/ERA5_LAND/DAILY_AGGR")
                                        .filterDate('1979-01-01','2023-12-31')
                                        .select('temperature_2m'); 
  
// Calculate Days Above 0 Degrees and Degree Days  // 
// Select mean daily temperature
var dailyMean = daily_climate.filter(ee.Filter.dayOfYear(151, 288));
                            

// List of years for temperature calculation --
// ends in 2018 bc fxn below advances 5 years, then takes mean, so we reach 2023 in this way -- upated to 2023 on 9/19/23
var allYears = ee.List.sequence(1979,2023);
var temp_yearList = ee.List.sequence(1979, 2018);  //takes a very long time to load
                                                     // to visualize, narrow year range (minimum range is 5 years however)        


// Calculate number of days above 0 and degree days for every year; returns 1 images for every year with bands for degDays and above0
// with properties: 'year'
var get_above0Collection = function(list){
  var startDate = ee.Date.fromYMD(list, 1, 1)
  var advanceYear = 1
  var endDate = startDate.advance(advanceYear,'year') // just want 1 year's image
  var tempImage_select = dailyMean.filterDate(startDate, endDate) //mean_tempCollection.filterDate(startDate, endDate)
  var sum = tempImage_select.map(function(image){
    var image_above0 = image.subtract(273).gt(0)
    return image_above0
  }).sum().rename('above0Days')
  var degreeDays = tempImage_select.map(function(image){
    var imageC = image.subtract(273)
    var image_below0 = imageC.where(imageC.lt(0), 0)
    return image_below0
  }).sum()
  return ee.Image(sum.addBands(degreeDays.rename('degreeDays')))
          .set('year', ee.Number(list))//.add(advanceYear)) //'year' represents the end year of the range
                                                         // e.g. 'year' = 1990 means that between 1985 and 1990 there were X days
                                                         // above 0 degrees celsius
};

var above0Collection = ee.ImageCollection(allYears.map(get_above0Collection));


// Calculate number of days above 0 and degree days in each 5 year rolling window
var get_above0 = function(list){
  var startDate = ee.Date.fromYMD(list, 1, 1) //ee.Date.fromYMD(list, 1, 1)
  var advanceYear = 5 // 5 years to match up with meander rate calculations
  var endDate = startDate.advance(advanceYear,'year') // just want 1 year's image
  var tempImage_select1 = above0Collection.filter(ee.Filter.gt('year', ee.Number(list)))
  var tempImage_select2 = tempImage_select1.filter(ee.Filter.lt('year', ee.Number(list).add(advanceYear)))  //startDate, endDate) //mean_tempCollection.filterDate(startDate, endDate)
  var sum = tempImage_select2.sum()
  return sum 
          .set('year', ee.Number(list).add(advanceYear)) //'year' represents the end year of the range
                                                         // e.g. 'year' = 1990 means that between 1985 and 1990 there were X days
                                                         // above 0 degrees celsius
};

var above0Result = ee.ImageCollection(temp_yearList.map(get_above0));


// Calculate each parameter within the Thiessen Polygons
var reduceAbove0 = above0Result.map(function(image){
  var reducer = image.reduceRegions({
          collection:  thiessen_polys, // remove _asset if working with new areas
          reducer: ee.Reducer.mean(), 
          scale: 500 
          //crs: 'EPSG:4326'
  })
          .map(function(feature){
            return feature.set('year', image.get('year'))
                          .setGeometry(null)
                          .set('latitude', feature.geometry().centroid().coordinates().get(1))
                          .set('longitude', feature.geometry().centroid().coordinates().get(0))
                          .set('Thiessen_ID', feature.get('point_ID'));
          });
      return reducer;
}).flatten();


// Export temperature parameters to drive
Export.table.toDrive({
    collection: reduceAbove0, 
    folder: 'ARCTIC_CARBON',
    description: 'Temp_' + 'Thiessens_' + tFirst + '_' + tEnd,
  fileNamePrefix: 'Temp_' + 'Thiessens_' + tFirst + '_' + tEnd,
    fileFormat: 'CSV'
  }) ;
  
  
}  // close big loop